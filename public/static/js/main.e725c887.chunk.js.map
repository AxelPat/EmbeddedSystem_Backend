{"version":3,"sources":["api/index.js","components/Navbar/Navbar.js","components/TableRecord/TableSnackBar.js","components/TableRecord/TableDialog.js","actions/data.js","components/TableRecord/TableRecord.js","components/TableUser/TableSnackBar.js","components/TableUser/TableDialog.js","actions/user.js","components/TableUser/TableUser.js","components/Timer/Timer.js","components/ToggleData/ToggleData.js","components/Home/Home.js","components/Login/styles.js","components/Login/Input.js","components/Login/Login.js","actions/auth.js","components/NoMatch/NoMatch.js","App.js","reducers/recordData.js","reducers/userData.js","reducers/auth.js","reducers/error.js","reducers/index.js","index.js"],"names":["API","axios","create","baseURL","interceptors","request","use","req","Cookies","get","jwtToken","headers","Authorization","getRecord","a","withCredentials","getUserData","updateRecord","recordId","recordData","patch","updateUser","userId","userData","deleteRecord","delete","then","signIn","authData","post","signUp","addUser","file","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","dbName","paddingRight","Navbar","useState","token","setToken","user","setUser","classes","dispatch","useDispatch","history","useHistory","logout","type","push","useEffect","decode","exp","moment","now","className","AppBar","position","Toolbar","IconButton","edge","color","aria-label","Typography","variant","Button","onClick","TableSnackBar","isEdit","isSuccess","setIsSuccess","open","setOpen","handleClick","handleClose","event","reason","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","message","action","Fragment","size","fontSize","TableDialog","isOpen","currentId","success","setSuccess","uid","name","temperature","setRecordData","record","useSelector","state","records","find","rec","_id","Dialog","DialogTitle","id","align","DialogContent","DialogContentText","style","paddingBottom","Grid","container","direction","item","TextField","disabled","value","label","onChange","e","target","DialogActions","api","data","payload","console","log","updateData","autoFocus","Table","rows","columns","setCurrentId","setIsEdit","isLoading","setIsLoading","length","filter","map","status","createdAt","format","field","headerName","hide","width","flex","sortable","renderCell","params","handleEdit","getValue","handleDelete","Paper","elevation","height","components","GridToolbar","LoadingOverlay","CircularProgress","loading","checked","setUserData","userdata","users","err","response","messages","fontWeight","Timer","Date","toLocaleString","date","setDate","secTimer","setInterval","clearInterval","Card","CardContent","gutterBottom","ToggleData","setChecked","selectFile","setSelectFile","Switch","Divider","display","flexDirection","paddingTop","files","accept","endAdornment","formData","FormData","append","Home","justify","alignItems","sm","xs","lg","TableUser","TableRecord","Hidden","only","paper","marginTop","padding","margin","form","submit","Input","handleChange","autofocus","handleShowPassword","error","required","fullWidth","InputProps","InputAdornment","Login","username","password","confirmPassword","db_id","setAuthData","showPassword","setShowPassword","isSignUp","setIsSignUp","Grow","in","timeout","Container","component","maxWidth","autoComplete","onSubmit","preventDefault","prev","NoMatch","fixed","left","top","transform","Link","to","App","path","exact","auth","set","remove","msg","includes","combineReducers","auths","errors","store","createStore","reducers","compose","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e725c887.chunk.js","sourcesContent":["import axios from 'axios'\r\nimport Cookies from 'js-cookie'\r\n\r\nconst API = axios.create({baseURL : 'http://localhost:7070/api'})\r\n\r\nAPI.interceptors.request.use((req) => {\r\n    if(Cookies.get().jwtToken){\r\n        req.headers.Authorization = `Bearer ${Cookies.get().jwtToken}`\r\n    }\r\n\r\n    return req;\r\n})\r\n\r\nexport const getRecord = async () => API.get('/user/records', {withCredentials: true})\r\n\r\nexport const getUserData = async () => API.get('/user/userData', {withCredentials: true})\r\n\r\nexport const updateRecord = async (recordId, recordData) => API.patch(`/user/record/${recordId}`, recordData, {withCredentials: true})\r\n\r\nexport const updateUser = async (userId, userData) => API.patch(`/user/userData/${userId}`, userData, {withCredentials: true})\r\n\r\nexport const deleteRecord = async (recordId) => API.delete(`/user/record/${recordId}`, {withCredentials: true}).then(getRecord)\r\n\r\nexport const deleteUser= async (userId) => API.delete(`/user/userData/${userId}`, {withCredentials: true}).then(getUserData)\r\n\r\nexport const signIn = async (authData) => API.post('/auth/login', authData)\r\n\r\nexport const signUp = async (authData) => API.post('/auth/register', authData)\r\n\r\nexport const addUser = async (file) => API.post('/user/userData', file, {withCredentials: true}).then(getUserData)","import React, { useState, useEffect } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { useDispatch} from 'react-redux'\r\nimport { makeStyles, AppBar, Toolbar, Typography, Button, IconButton } from '@material-ui/core'\r\nimport MenuIcon from '@material-ui/icons/Menu'\r\nimport Cookies from 'js-cookie'\r\nimport moment from 'moment'\r\nimport decode from 'jwt-decode'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  dbName: {\r\n    paddingRight: '20px'\r\n  }\r\n}));\r\n\r\nconst Navbar = () => {\r\n  const [token, setToken] = useState(Cookies.get('jwtToken'))\r\n  const [user, setUser] = useState(Cookies.get('db_id'))\r\n  const classes = useStyles()\r\n  const dispatch = useDispatch()\r\n  const history = useHistory()\r\n\r\n  const logout = () => {\r\n    dispatch({type: 'LOGOUT'})\r\n    history.push('/auth')\r\n    setUser(null)\r\n  }\r\n  \r\n  useEffect(() => {\r\n      if(token) {\r\n        const decodedToken = decode(token)\r\n  \r\n        if(decodedToken.exp * 1000 < moment.now()){\r\n          logout()\r\n        }\r\n      }else {\r\n        logout()\r\n      }\r\n      \r\n      setToken(Cookies.get('jwtToken'))\r\n  }, [])\r\n\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            Dashboard\r\n          </Typography>\r\n          <Typography variant=\"overline\" className={classes.dbName}>{user ? user : ''}</Typography>\r\n          <Button color=\"inherit\" onClick={logout}>Logout</Button>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Navbar\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Snackbar, IconButton } from '@material-ui/core'\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nconst TableSnackBar = ({isEdit, isSuccess, setIsSuccess}) => {\r\n    const [open, setOpen] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if(isSuccess) handleClick()\r\n    },[isSuccess])\r\n\r\n    const handleClick = () => {\r\n        setOpen(true)\r\n    }\r\n\r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n\r\n        setOpen(false)\r\n        setIsSuccess(false)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Snackbar\r\n            anchorOrigin={{\r\n                vertical: 'bottom',\r\n                horizontal: 'center',\r\n            }}\r\n            open={open}\r\n            autoHideDuration={3000}\r\n            onClose={handleClose}\r\n            message={isEdit ? 'Data sucessfully updated' : 'Data sucessfully deleted'}\r\n            action={\r\n                <React.Fragment>\r\n                <IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={handleClose}>\r\n                    <CloseIcon fontSize=\"small\" />\r\n                </IconButton>\r\n                </React.Fragment>\r\n            }\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TableSnackBar\r\n","import React, { useState, useEffect } from 'react';\r\nimport {  \r\n    Dialog, \r\n    DialogActions, \r\n    DialogContent, \r\n    DialogContentText,\r\n    DialogTitle,\r\n    Typography,\r\n    Button,\r\n    TextField,\r\n    Grid\r\n} from '@material-ui/core'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { updateData, deleteData } from '../../actions/data'\r\n\r\nimport TableSnackBar from './TableSnackBar'\r\n\r\nconst TableDialog = ({isOpen, handleClose, isEdit, currentId}) => {\r\n    const [open, setOpen] = useState(false)\r\n    const [success, setSuccess] = useState(false)\r\n    const [recordData, setRecordData] = useState({ uid: '', userData:{ name: '' }, temperature: ''})\r\n\r\n    const record = useSelector((state) => currentId ? state.records.find((rec) => rec._id === currentId) : null)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        if(record) setRecordData(record) \r\n        \r\n        if(isOpen){\r\n            setOpen(true)\r\n        } else {\r\n            setOpen(false)\r\n        }\r\n    },[record, isOpen])\r\n\r\n    const handleSubmit = () => {\r\n        if(!isEdit){\r\n            // console.log('delete')\r\n            dispatch(deleteData(currentId))\r\n        } else {\r\n            // console.log('update')\r\n            dispatch(updateData(currentId, recordData))\r\n        }\r\n        setSuccess(true)\r\n        handleClose()\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <TableSnackBar isEdit={isEdit} isSuccess={success} setIsSuccess={setSuccess}/>\r\n            <Dialog\r\n            open={open}\r\n            onClose={handleClose}\r\n            >\r\n                <DialogTitle id=\"alert-dialog-title\">\r\n                    <Typography align=\"center\">\r\n                        {isEdit ? 'Edit Record' : 'Delete Record'}\r\n                    </Typography>\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-description\">\r\n                        {!isEdit && 'Are you sure want to delete this record ?'}\r\n                    </DialogContentText>\r\n                    {isEdit && (\r\n                    <form style={{paddingBottom: '20px'}}>\r\n                        <Grid container spacing={2} direction=\"column\">   \r\n                            <Grid item>\r\n                                <TextField disabled value={recordData.uid} variant=\"outlined\"  label=\"UID\"/>\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <TextField disabled value={!recordData.userData ? '' : recordData.userData.name} variant=\"outlined\"  label=\"Name\"/>\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <TextField variant=\"outlined\" value={recordData.temperature} onChange={e => setRecordData({...recordData, temperature: e.target.value})} label=\"Temperature\"/>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </form>\r\n                    )}\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} variant=\"contained\" color={isEdit ? 'secondary' : 'primary'}>\r\n                        No\r\n                    </Button>\r\n                    <Button variant=\"contained\" onClick={handleSubmit} color= {isEdit ? 'primary':'secondary'} autoFocus>\r\n                        Yes\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TableDialog\r\n","import * as api from '../api'\r\n\r\nexport const getData = () => async (dispatch) => {\r\n    try {\r\n        const { data } = await api.getRecord()\r\n\r\n        dispatch({type: 'FETCHRECORD', payload: data})\r\n    }catch (error){\r\n        let err = error.response.data.messages\r\n        // console.log(err)\r\n        if(typeof(err) === 'object'){\r\n            err = err[0]\r\n        }\r\n        dispatch({type : 'ERRORRECORD', payload: err})\r\n    }\r\n}\r\n\r\nexport const updateData = (recordId, recordData) => async(dispatch) => {\r\n    try{\r\n        const { data } = await api.updateRecord(recordId, recordData)\r\n\r\n        dispatch({type: 'UPDATERECORD', payload: data})\r\n\r\n    } catch (error) {\r\n        console.log(error.message)\r\n    }\r\n}\r\n\r\nexport const deleteData = (recordId) => async(dispatch) => {\r\n    try{\r\n        const { data } = await api.deleteRecord(recordId)\r\n\r\n        dispatch({type: 'DELETERECORD', payload: data})\r\n    } catch (error){\r\n        console.log(error.message)\r\n    }\r\n}","import React, { useEffect, useState  } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { Paper, CircularProgress, IconButton } from '@material-ui/core'\r\nimport { DataGrid, GridToolbar, GridOverlay } from '@material-ui/data-grid'\r\nimport EditIcon from '@material-ui/icons/Edit'\r\nimport DeleteIcon from '@material-ui/icons/Delete'\r\nimport moment from 'moment'\r\n\r\nimport TableDialog from './TableDialog'\r\n\r\nconst Table = ({currentId, setCurrentId }) => {\r\n    const [open, setOpen] = useState(false)\r\n    const [isEdit, setIsEdit] = useState(true)\r\n    const [isLoading, setIsLoading] = useState(true)\r\n    const record = useSelector((state) => state.records)\r\n\r\n    let rows = [], columns = []\r\n\r\n    useEffect(() => {\r\n        if(!record.length){\r\n            return setIsLoading(true)\r\n        }\r\n        setIsLoading(false)\r\n    },[record])\r\n\r\n    // for showing all record even without userdata\r\n    // const rows = record.map(item => { \r\n    rows = record.filter(item => item.userData != null).map(item => {\r\n        const container = {}\r\n        container['id'] = item._id\r\n        container['uid'] = item.uid\r\n        container['name'] = item.userData ? item.userData.name : ''\r\n        container['temperature'] = item.temperature\r\n        container['status'] = item.status\r\n        container['createdAt'] = moment(item.createdAt).format('M/D/YYYY LT')\r\n        container['action'] = ''\r\n        return container\r\n    })\r\n\r\n    columns = [\r\n        { field: 'id', headerName: 'id', hide: true},\r\n        { field: 'uid', headerName: 'UID',  width: 120},\r\n        { field: 'name', headerName: 'Name', flex:1},\r\n        { field: 'temperature', headerName: 'Temp',  width: 100},\r\n        { field: 'status', headerName: 'Status',  width: 100 },\r\n        { field: 'createdAt', headerName: 'Time In', width: 200, type:'dateTime'},\r\n        { field: 'action', headerName: 'Action', width:150, sortable:false,\r\n        renderCell: (params) => (\r\n            <>\r\n                <IconButton color=\"primary\" \r\n                    onClick={(e) => {\r\n                        handleEdit(params.getValue('id'))}} >\r\n                    <EditIcon />\r\n                </IconButton >  \r\n                <IconButton color=\"secondary\" onClick={e => handleDelete(params.getValue('id'))} >\r\n                    <DeleteIcon />\r\n                </IconButton>\r\n            </>\r\n        )}\r\n    ]\r\n    \r\n\r\n    const loadingOverlay = () => {\r\n        return (\r\n        <GridOverlay>\r\n            <div style={{position : 'absolute'}}>\r\n                <CircularProgress/>       \r\n            </div>\r\n        </GridOverlay>    \r\n    )}\r\n\r\n    const handleEdit = (id) => {\r\n        setCurrentId(id)\r\n        setIsEdit(true)\r\n        setOpen(true)\r\n    }\r\n    \r\n    const handleDelete = (id) => {\r\n        setCurrentId(id)\r\n        setIsEdit(false);\r\n        setOpen(true);\r\n    }\r\n    \r\n    const handleClose =  () => {\r\n        setOpen(false)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <TableDialog \r\n                isOpen={open} \r\n                handleClose={handleClose}  \r\n                isEdit={isEdit}\r\n                currentId={currentId}\r\n            />\r\n\r\n            <Paper elevation={3}>\r\n                <div style={{ height: 500, width: '100%' }}>\r\n                    <DataGrid rows={rows} columns={columns}\r\n                    components={{ \r\n                        Toolbar: GridToolbar,\r\n                        LoadingOverlay: loadingOverlay\r\n                    }}\r\n                    loading={isLoading} />\r\n                </div>\r\n            </Paper>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Table\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Snackbar, IconButton } from '@material-ui/core'\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nconst TableSnackBar = ({isEdit, isSuccess, setIsSuccess}) => {\r\n    const [open, setOpen] = useState(false)\r\n\r\n    useEffect(() => {\r\n        if(isSuccess) handleClick()\r\n    },[isSuccess])\r\n\r\n    const handleClick = () => {\r\n        setOpen(true)\r\n    }\r\n\r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n\r\n        setOpen(false)\r\n        setIsSuccess(false)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Snackbar\r\n            anchorOrigin={{\r\n                vertical: 'bottom',\r\n                horizontal: 'center',\r\n            }}\r\n            open={open}\r\n            autoHideDuration={3000}\r\n            onClose={handleClose}\r\n            message={isEdit ? 'Data sucessfully updated' : 'Data sucessfully deleted'}\r\n            action={\r\n                <React.Fragment>\r\n                <IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={handleClose}>\r\n                    <CloseIcon fontSize=\"small\" />\r\n                </IconButton>\r\n                </React.Fragment>\r\n            }\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TableSnackBar\r\n","import React, { useState, useEffect } from 'react';\r\nimport {  \r\n    Dialog, \r\n    DialogActions, \r\n    DialogContent, \r\n    DialogContentText,\r\n    DialogTitle,\r\n    Typography,\r\n    Button,\r\n    TextField,\r\n    Grid\r\n} from '@material-ui/core'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { updateUser, deleteUser } from '../../actions/user'\r\n\r\nimport TableSnackBar from './TableSnackBar'\r\n\r\nconst TableDialog = ({isOpen, handleClose, isEdit, currentId, checked}) => {\r\n    const [open, setOpen] = useState(false)\r\n    const [success, setSuccess] = useState(false)\r\n    const [userData, setUserData] = useState({ uid: '', name: ''})\r\n\r\n    const userdata = useSelector((state) => currentId ? state.users.find((rec) => rec._id === currentId) : null)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        if(userdata) setUserData(userdata)\r\n        \r\n        if(isOpen){\r\n            setOpen(true)\r\n        } else {\r\n            setOpen(false)\r\n        }\r\n    },[userdata, isOpen, checked])\r\n\r\n    const handleSubmit = () => {\r\n        if(!isEdit){\r\n            // console.log('delete')\r\n            dispatch(deleteUser(currentId))\r\n        } else {\r\n            // console.log('update')\r\n            dispatch(updateUser(currentId, userData))\r\n        }\r\n        setSuccess(true)\r\n        handleClose()\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <TableSnackBar isEdit={isEdit} isSuccess={success} setIsSuccess={setSuccess}/>\r\n            <Dialog\r\n            open={open}\r\n            onClose={handleClose}\r\n            >\r\n                <DialogTitle id=\"alert-dialog-title\">\r\n                    <Typography align=\"center\">\r\n                        {isEdit ? 'Edit userdata' : 'Delete userdata'}\r\n                    </Typography>\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-description\">\r\n                        {!isEdit && 'Are you sure want to delete this userdata ?'}\r\n                    </DialogContentText>\r\n                    {isEdit && (\r\n                    <form style={{paddingBottom: '20px'}}>\r\n                        <Grid container spacing={2} direction=\"column\">\r\n                            <Grid item>\r\n                                <TextField disabled value={!userData ? '' : userData.uid} variant=\"outlined\"  label=\"UID\"/>\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <TextField value={!userData ? '' : userData.name} onChange={e => setUserData({...userData, name: e.target.value})} variant=\"outlined\"  label=\"Name\"/>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </form>\r\n                    )}\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} variant=\"contained\" color={isEdit ? 'secondary' : 'primary'}>\r\n                        No\r\n                    </Button>\r\n                    <Button variant=\"contained\" onClick={handleSubmit} color= {isEdit ? 'primary':'secondary'} autoFocus>\r\n                        Yes\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TableDialog\r\n","import * as api from '../api'\r\n\r\nexport const getUserdata = () => async(dispatch) => {\r\n    try {\r\n        const { data } = await api.getUserData()\r\n\r\n        dispatch({type: 'FETCHUSER', payload: data})\r\n    } catch (error){\r\n        let err = error.response.data.messages\r\n        // console.log(err)\r\n        if(typeof(err) === 'object'){\r\n            err = err[0]\r\n        }\r\n        dispatch({type : 'ERRORUSER', payload: err})\r\n    }\r\n}\r\n\r\nexport const updateUser = (userId, userData) => async(dispatch) => {\r\n    try{\r\n        const { data } = await api.updateUser(userId, userData)\r\n\r\n        dispatch({type: 'UPDATEUSER', payload: data})\r\n\r\n    } catch (error) {\r\n        let err = error.response.data.messages\r\n        // console.log(err)\r\n        if(typeof(err) === 'object'){\r\n            err = err[0]\r\n        }\r\n        dispatch({type : 'ERRORUPDATE', payload: err})\r\n    }\r\n}\r\n\r\nexport const deleteUser = (userId) => async(dispatch) => {\r\n    try{\r\n        const { data } = await api.deleteRecord(userId)\r\n\r\n        dispatch({type: 'DELETEUSER', payload: data})\r\n    } catch (error){\r\n        let err = error.response.data.messages\r\n        // console.log(err)\r\n        if(typeof(err) === 'object'){\r\n            err = err[0]\r\n        }\r\n        dispatch({type : 'ERRORDELETE', payload: err})\r\n    }\r\n}\r\n\r\nexport const uploadUser = (userData) => async(dispatch) => {\r\n    try {\r\n        const { data } = await api.addUser(userData)\r\n\r\n        dispatch({type : 'UPLOADUSER', payload: data})\r\n    } catch (error) {\r\n        console.log(error.message)\r\n    }\r\n}","import React, { useEffect, useState  } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { Paper, CircularProgress, IconButton } from '@material-ui/core'\r\nimport { DataGrid, GridToolbar, GridOverlay } from '@material-ui/data-grid'\r\nimport EditIcon from '@material-ui/icons/Edit'\r\nimport DeleteIcon from '@material-ui/icons/Delete'\r\n\r\nimport TableDialog from './TableDialog'\r\n\r\nconst Table = ({currentId, setCurrentId}) => {\r\n    const [open, setOpen] = useState(false)\r\n    const [isEdit, setIsEdit] = useState(true)\r\n    const [isLoading, setIsLoading] = useState(true)\r\n    const userdata = useSelector((state) => state.users)\r\n\r\n    let rows = [], columns = []\r\n\r\n    useEffect(() => {\r\n        if(!userdata.length){\r\n            return setIsLoading(true)\r\n        }\r\n        setIsLoading(false)\r\n    },[userdata])\r\n\r\n    rows = userdata.map(item => {\r\n        const container = {}\r\n        container['id'] = item.id\r\n        container['uid'] = item.uid\r\n        container['name'] = item.name\r\n        // container['createdAt'] = moment(item.createdAt).format('M/D/YYYY LT')\r\n        return container\r\n    })\r\n\r\n    columns = [\r\n        { field: 'id', headerName: 'id', hide: true},\r\n        { field: 'uid', headerName: 'UID',  flex:1},\r\n        { field: 'name', headerName: 'Name', flex:1},\r\n        // { field: 'createdAt', headerName: 'Time In', width: 200, type:'dateTime'},\r\n        { field: 'action', headerName: 'Action', width:150, sortable:false,\r\n        renderCell: (params) => (\r\n            <>\r\n                <IconButton color=\"primary\" \r\n                    onClick={(e) => {\r\n                        handleEdit(params.getValue('id'))}} >\r\n                    <EditIcon />\r\n                </IconButton >  \r\n                <IconButton color=\"secondary\" onClick={e => handleDelete(params.getValue('id'))} >\r\n                    <DeleteIcon />\r\n                </IconButton>\r\n            </>\r\n        )}\r\n    ]\r\n    \r\n    const loadingOverlay = () => {\r\n        return (\r\n        <GridOverlay>\r\n            <div style={{position : 'absolute'}}>\r\n                <CircularProgress/>       \r\n            </div>\r\n        </GridOverlay>    \r\n    )}\r\n\r\n    const handleEdit = (id) => {\r\n        setCurrentId(id)\r\n        setIsEdit(true)\r\n        setOpen(true)\r\n    }\r\n    \r\n    const handleDelete = (id) => {\r\n        setCurrentId(id)\r\n        setIsEdit(false);\r\n        setOpen(true);\r\n    }\r\n    \r\n    const handleClose =  () => {\r\n        setOpen(false)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <TableDialog \r\n                isOpen={open} \r\n                handleClose={handleClose}  \r\n                isEdit={isEdit}\r\n                currentId={currentId}\r\n            />\r\n\r\n            <Paper elevation={3}>\r\n                <div style={{ height: 500, width: '100%' }}>\r\n                    <DataGrid rows={rows} columns={columns}\r\n                    components={{ \r\n                        Toolbar: GridToolbar,\r\n                        LoadingOverlay: loadingOverlay\r\n                    }}\r\n                    loading={isLoading} />\r\n                </div>\r\n            </Paper>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Table\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Card, CardContent, Typography, makeStyles } from '@material-ui/core'\r\n\r\nconst useStyles = makeStyles({\r\n    title: {\r\n      fontSize: 24,\r\n      fontWeight: 'bold'\r\n    }\r\n  });\r\n\r\nconst Timer = () => {\r\n    const [date, setDate] = useState(new Date().toLocaleString());\r\n    const classes = useStyles();\r\n\r\n    useEffect(() => {\r\n        let secTimer = setInterval( () => {\r\n        setDate(new Date().toLocaleString())\r\n        },1000)\r\n\r\n        return () => clearInterval(secTimer);\r\n    }, []);\r\n\r\n    return (\r\n        <Card elevation={3}>\r\n            <CardContent>\r\n                <Typography variant=\"h5\" className={classes.title} gutterBottom>Current Time</Typography>\r\n                <Typography variant=\"h6\" color=\"textSecondary\">{date}</Typography>\r\n            </CardContent>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default Timer\r\n","import React, { useState } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { \r\n    Card, \r\n    CardContent, \r\n    IconButton, \r\n    Typography, \r\n    Switch,\r\n    Input,\r\n    Divider\r\n} from '@material-ui/core'\r\n\r\nimport { uploadUser } from '../../actions/user'\r\n\r\nimport PublishIcon from '@material-ui/icons/Publish'\r\n\r\nconst ToggleData = ({checked, setChecked}) => {\r\n    const [selectFile, setSelectFile] = useState(null)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const handleChange = (event) => {\r\n        setChecked(!checked)\r\n    }\r\n\r\n    const handleSubmit = () => {\r\n        if(!selectFile) return\r\n        const formData = new FormData()\r\n        formData.append('data', selectFile, selectFile.name)\r\n        dispatch(uploadUser(formData))\r\n    }\r\n\r\n    return (\r\n        <Card elevation={3}>\r\n            <CardContent>\r\n                <Typography variant='overline'>Toggle User Data</Typography>\r\n                <Switch\r\n                    checked={checked}\r\n                    onChange={handleChange}\r\n                    color=\"primary\"\r\n                    name=\"checkedA\"\r\n                />\r\n                \r\n                {checked && (\r\n                <>\r\n                    <Divider/>\r\n                    <div style={{display: 'flex', flexDirection: 'column', paddingTop:'5px'}}>\r\n                        <Typography variant='overline'>Upload User data</Typography>\r\n                        <Input\r\n                            onChange={e=> setSelectFile(e.target.files[0])} \r\n                            accept=\".csv\"\r\n                            type=\"file\"  \r\n                            endAdornment={(\r\n                                <IconButton onClick={handleSubmit} size=\"small\" color=\"primary\">\r\n                                    <PublishIcon/>\r\n                                </IconButton>\r\n                            )}\r\n                        />\r\n                    </div>\r\n                </>\r\n                )}\r\n                \r\n                {/* <div style={{paddingTop: '10px'}}>\r\n                    <LinearProgress variant=\"determinate\" value={progress} />\r\n                </div> */}\r\n                \r\n            </CardContent>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default ToggleData\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Grid, Hidden } from '@material-ui/core'\r\nimport { useDispatch } from 'react-redux'\r\n\r\nimport { getData } from '../../actions/data'\r\nimport { getUserdata } from '../../actions/user' \r\n\r\nimport Navbar from '../Navbar/Navbar'\r\nimport TableRecord from '../TableRecord/TableRecord'\r\nimport TableUser from '../TableUser/TableUser'\r\nimport Timer from '../Timer/Timer'\r\nimport ToggleData from '../ToggleData/ToggleData'\r\n\r\nconst Home = () => {\r\n    const [currentId, setCurrentId] = useState(null)\r\n    const [checked, setChecked] = useState(false)\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        dispatch(getUserdata())\r\n        dispatch(getData())\r\n        \r\n    },[dispatch, currentId, checked])\r\n\r\n    return (\r\n        <>\r\n            <Navbar/>\r\n            <div style={{paddingTop : '20px'}}>\r\n                <Grid container justify='center' direction=\"row\" alignItems=\"flex-start\" spacing={2}>\r\n                    <Grid item sm={12} xs={12} lg>\r\n                        {checked ? \r\n                            (<TableUser currentId={currentId} setCurrentId={setCurrentId}/>) :\r\n                            (<TableRecord currentId={currentId} setCurrentId={setCurrentId}/>)\r\n                        }\r\n                    </Grid>\r\n                    <Grid item sm={12} xs={12} lg={3}>\r\n                        <Grid container direction=\"column\" justify='center' alignItems=\"stretch\" spacing={2}>\r\n                            <Hidden only={['sm', 'xs','md']}>\r\n                                <Grid item>\r\n                                    <Timer/>\r\n                                </Grid>\r\n                            </Hidden>\r\n                            <Grid item>\r\n                                <ToggleData checked={checked} setChecked={setChecked}/>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    padding: theme.spacing(2),\r\n  },\r\n  root: {\r\n    '& .MuiTextField-root': {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  form: {\r\n    width: '100%',\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  }\r\n}));","import React from 'react'\r\nimport { TextField, Grid, IconButton, InputAdornment } from '@material-ui/core'\r\nimport Visibility from '@material-ui/icons/Visibility'\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff'\r\n\r\nconst Input = ({ name, handleChange, autofocus, label, type, error, handleShowPassword}) => {\r\n    return (\r\n        <Grid item xs={12} >\r\n            <TextField\r\n                name={name}\r\n                onChange={handleChange}\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                label={label}\r\n                autoFocus={autofocus}\r\n                type={type}\r\n                InputProps={name === 'password' ? {\r\n                    endAdornment: (\r\n                        <InputAdornment position='end'>\r\n                            <IconButton onClick={handleShowPassword}>\r\n                                {type === 'password' ? <Visibility /> : <VisibilityOff />}\r\n                            </IconButton>\r\n                        </InputAdornment>\r\n                    )\r\n                }: null}\r\n            /> \r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default Input\r\n","import React, { useState } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { Container, Paper, Grid, Button, Typography, Grow } from '@material-ui/core'\r\nimport { useDispatch } from 'react-redux' \r\nimport useStyles from './styles'\r\n\r\nimport { signIn, signUp } from '../../actions/auth'\r\n\r\nimport Input from './Input'\r\n\r\nconst Login = () => {\r\n    const [authData, setAuthData] = useState({username: '', password: '', confirmPassword: '', db_id: ''})\r\n    const [showPassword, setShowPassword] = useState(false)\r\n    const [isSignUp, setIsSignUp] = useState(false)\r\n    const classes = useStyles()\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n\r\n        if(isSignUp) {\r\n            dispatch(signUp(authData, history))\r\n        } else {\r\n            dispatch(signIn(authData, history))\r\n        }\r\n    }\r\n\r\n    const handleChange = (e) => {\r\n        setAuthData({...authData, [e.target.name]: e.target.value})\r\n    }\r\n\r\n    const handleShowPassword = () => setShowPassword((prev) => !prev)\r\n\r\n    const switchMode = () => {\r\n        setIsSignUp((prev) => !prev)\r\n        setShowPassword(false)\r\n    }\r\n    \r\n    return (\r\n        <div>\r\n            <Grow in={true} timeout={1000}>\r\n                <Container component='main' maxWidth='xs'>\r\n                    <Paper className={classes.paper} elevation={3}>\r\n                        <Typography variant=\"h4\">{isSignUp ? 'SIGN UP' : 'SIGN IN'}</Typography>\r\n                        <form autoComplete=\"off\" className={classes.form} onSubmit={handleSubmit}>\r\n                            <Grid container spacing={2}>\r\n                                <Input name=\"username\" label=\"Username\" handleChange={handleChange} autoFocus/>\r\n                                {isSignUp && <Input name=\"db_id\" label=\"DB ID\" handleChange={handleChange}/>}\r\n                                <Input name=\"password\" label=\"Password\" handleChange={handleChange} type={showPassword ? \"text\" : \"password\"} handleShowPassword={handleShowPassword}/>\r\n                                {/* {isSignUp && <Input name=\"confirmPassword\" label=\"Confirm Password\" handleChange={handleChange} type=\"password\"/>} */}\r\n                            </Grid>\r\n                            \r\n                            <Button type=\"submit\" fullWidth variant=\"contained\" color=\"primary\" className={classes.submit}>\r\n                                {isSignUp ? 'Sign Up' : 'Sign In'}\r\n                            </Button>\r\n                            \r\n                            <Grid container justify=\"flex-end\">\r\n                                <Grid item>\r\n                                    <Button onClick={switchMode}>\r\n                                        {isSignUp ? 'Have an account? Sign In' : 'Don\\'t have an account? Sign Up'}\r\n                                    </Button>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </form>\r\n                    </Paper>\r\n                </Container>\r\n            </Grow>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","import * as api from '../api'\r\n\r\nexport const signIn = (authData, history) => async (dispatch) => {\r\n    try {\r\n        const { data } = await api.signIn(authData);\r\n        dispatch({type: 'SIGNIN', payload: data})\r\n        history.push('/')\r\n    } catch(error) {\r\n        let err = error.response.data.messages\r\n        // console.log(err)\r\n        if(typeof(err) === 'object'){\r\n            err = err[0]\r\n        }\r\n        dispatch({type : 'ERRORSIGNIN', payload: err})\r\n        \r\n    }\r\n}\r\n\r\nexport const signUp = (authData, history) => async (dispatch) => {\r\n    try {\r\n        const { data } = await api.signUp(authData);\r\n        dispatch({type: 'SIGNUP', payload: data})\r\n        history.push('/')\r\n    } catch(error) {\r\n        let err = error.response.data.messages\r\n        // console.log(err)\r\n        if(typeof(err) === 'object'){\r\n            err = err[0]\r\n        }\r\n        dispatch({type : 'ERRORSIGNUP', payload: err})\r\n    }\r\n}","import React from 'react'\r\nimport { Container, Typography, Button, Paper, makeStyles } from '@material-ui/core'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    title: {\r\n      fontSize: '25px',\r\n    }\r\n}));\r\n\r\nconst NoMatch = () => {\r\n    const classes = useStyles()\r\n    return (\r\n            <Container fixed maxWidth=\"lg\">\r\n            <Paper>\r\n                <div style={{\r\n                    position: 'absolute', \r\n                    left: '50%', \r\n                    top: '50%',\r\n                    transform: 'translate(-50%, -50%)', \r\n                    display: 'flex', \r\n                    flexDirection: 'column'\r\n                }}>\r\n                    <Typography align=\"center\" variant=\"h1\">404</Typography>\r\n                    <Typography align=\"center\" className={classes.title} variant=\"overline\">Page Not Found</Typography>\r\n                    <Button component={Link} to=\"/\" variant=\"outlined\">Back To Home</Button>\r\n                </div>\r\n            </Paper>\r\n            </Container>\r\n    )\r\n}\r\n\r\nexport default NoMatch\r\n","import React from 'react'\r\nimport { Container } from '@material-ui/core'\r\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\r\n\r\nimport Home from './components/Home/Home'\r\nimport Login from './components/Login/Login'\r\nimport NoMatch from './components/NoMatch/NoMatch'\r\n\r\nconst App = () => {\r\n    return (\r\n        <BrowserRouter>\r\n        <Container maxWidth='lg'>\r\n            <Switch>\r\n                <Route path=\"/\" exact component={Home}/>\r\n                <Route path=\"/auth\" exact component={Login}/>\r\n                <Route path=\"*\"><NoMatch/></Route>\r\n            </Switch>\r\n        </Container>\r\n        </BrowserRouter>\r\n    )\r\n}\r\n\r\nexport default App","const recordData = (records = [] , action) => {\r\n    switch(action.type) {\r\n        case 'FETCHRECORD' :\r\n            return action.payload\r\n\r\n        case 'UPDATERECORD':\r\n            return records.map((record) => record._id === action.payload._id ? action.payload : record)\r\n\r\n        case 'DELETERECORD' : \r\n            return action.payload\r\n\r\n        case 'ERRORRECORD' :\r\n            return []\r\n\r\n        default : \r\n            return records\r\n    }\r\n}\r\n\r\nexport default recordData","const userData = (records = [] , action) => {\r\n    switch(action.type) {\r\n        case 'FETCHUSER' :\r\n            return action.payload\r\n\r\n        case 'UPDATEUSER':\r\n            return records.map((record) => record._id === action.payload._id ? action.payload : record)\r\n\r\n        case 'DELETEUSER' : \r\n            return action.payload\r\n\r\n        case 'UPLOADUSER' : \r\n            return action.payload\r\n        \r\n        case 'ERRORUSER' :\r\n            return []\r\n\r\n        default : \r\n            return records\r\n    }\r\n}\r\n\r\nexport default userData","import Cookies from 'js-cookie'\r\n\r\nconst auth = (state = {authData : null}, action) => {\r\n    switch(action.type){\r\n        case 'SIGNIN' : \r\n            // localStorage.setItem('profile', JSON.stringify({...action.payload}))\r\n            Cookies.set('db_id', action.payload.db_id, { path: '/' })\r\n            Cookies.set('jwtToken', action.payload.jwtToken, { path: '/' })\r\n            return {...state, authData: action.payload};\r\n\r\n        case 'SIGNUP' : \r\n            // localStorage.setItem('profile', JSON.stringify({...action.payload}))\r\n            Cookies.set('db_id', action.payload.db_id, { path: '/' })\r\n            Cookies.set('jwtToken', action.payload.jwtToken, { path: '/' })\r\n            return {...state, authData: action.payload};\r\n\r\n        case 'LOGOUT' : \r\n            // localStorage.clear()\r\n            Cookies.remove('db_id', {path: '/'})\r\n            Cookies.remove('jwtToken', {path: '/'})\r\n            return {...state, authData: null};\r\n            \r\n        default : return state;\r\n    }\r\n}\r\n\r\nexport default auth","const error = (state = {type: '', msg : ''},action) => {\r\n    switch(action.type){\r\n        case 'ERRORSIGNIN' : \r\n            if(action.payload.includes('Password')) return {...state, type: 'signin', msg: 'Password'}\r\n            if(action.payload.includes('Document')) return {...state, type: 'signin', msg: 'Username'}\r\n            break\r\n        case 'ERRORSIGNUP' : \r\n            if(action.payload.includes('Password')) return {...state, type: 'signup', msg: 'Password'}\r\n            if(action.payload.includes('Username')) return {...state, type: 'signup', msg: 'Username'}\r\n            break\r\n        case 'ERRORUPDATE' :\r\n            if(action.payload.includes('id')) return {...state, type: 'update', msg: 'id'}\r\n            break\r\n        case 'ERRORDELETE' :\r\n            if(action.payload.includes('id')) return {...state, type: 'delete', msg: 'id'}\r\n            break\r\n        default : return null\r\n    }\r\n\r\n}\r\n\r\nexport default error","import { combineReducers } from 'redux'\r\n\r\nimport recordData from './recordData'\r\nimport userData from './userData'\r\nimport auth from './auth'\r\nimport error from './error'\r\n\r\n//Create global store for storing data\r\nexport default combineReducers({ \r\n    records : recordData, \r\n    users : userData, \r\n    auths : auth, \r\n    errors : error \r\n})","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\n\r\nimport { Provider } from 'react-redux'\r\nimport { createStore, applyMiddleware, compose } from 'redux'\r\nimport thunk from 'redux-thunk'\r\n\r\nimport App from './App'\r\nimport reducers from './reducers'\r\n\r\nconst store = createStore(reducers, compose(applyMiddleware(thunk)))\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App/>\r\n    </Provider>, \r\n    document.getElementById('root')\r\n)"],"sourceRoot":""}